{
    "AWSTemplateFormatVersion": "2010-09-09",

    "Description": "template for new ami",


    "Mappings": {

        "SubnetConfig": {
            "VPC": {
                "CIDR": "10.0.0.0/16"
            },
            "Public1": {
                "CIDR": "10.0.1.0/24"
            }
        }
    },

    "Resources": {

        "VPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {

                "EnableDnsSupport": "true",
                "EnableDnsHostnames": "true",
                "CidrBlock": {
                    "Fn::FindInMap": ["SubnetConfig", "VPC", "CIDR"]
                }
            }
        },


        "PublicSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "AvailabilityZone": {
                    "Fn::Select": ["0", {
                        "Fn::GetAZs": ""
                    }]
                },
                "CidrBlock": {
                    "Fn::FindInMap": ["SubnetConfig", "Public1", "CIDR"]
                },
                "Tags": [{
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    {
                        "Key": "Network",
                        "Value": "Public1"
                    }
                ]
            }
        },

        "InternetGateway": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags": [{
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    {
                        "Key": "Network",
                        "Value": "Public"
                    }
                ]
            }
        },

        "GatewayToInternet": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "InternetGatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },

        "PublicRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [{
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    {
                        "Key": "Network",
                        "Value": "Public"
                    }
                ]
            }
        },

        "PublicRoute": {
            "Type": "AWS::EC2::Route",
            "DependsOn": "GatewayToInternet",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },

        "PublicSubnetRouteTableAssociation1": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PublicSubnet1"
                },
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                }
            }
        },

        "PublicNetworkAcl": {
            "Type": "AWS::EC2::NetworkAcl",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [{
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    {
                        "Key": "Network",
                        "Value": "Public"
                    }
                ]
            }
        },

        "InboundHTTPPublicNetworkAclEntry": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "PublicNetworkAcl"
                },
                "RuleNumber": "100",
                "Protocol": "6",
                "RuleAction": "allow",
                "Egress": "false",
                "CidrBlock": "0.0.0.0/0",
                "PortRange": {
                    "From": "80",
                    "To": "80"
                }
            }
        },

        "InboundHTTPSPublicNetworkAclEntry": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "PublicNetworkAcl"
                },
                "RuleNumber": "101",
                "Protocol": "6",
                "RuleAction": "allow",
                "Egress": "false",
                "CidrBlock": "0.0.0.0/0",
                "PortRange": {
                    "From": "443",
                    "To": "443"
                }
            }
        },

        "InboundSSHPublicNetworkAclEntry": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "PublicNetworkAcl"
                },
                "RuleNumber": "102",
                "Protocol": "6",
                "RuleAction": "allow",
                "Egress": "false",
                "CidrBlock": "0.0.0.0/0",
                "PortRange": {
                    "From": "22",
                    "To": "22"
                }
            }
        },

        "InboundEmphemeralPublicNetworkAclEntry": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "PublicNetworkAcl"
                },
                "RuleNumber": "103",
                "Protocol": "6",
                "RuleAction": "allow",
                "Egress": "false",
                "CidrBlock": "0.0.0.0/0",
                "PortRange": {
                    "From": "1024",
                    "To": "65535"
                }
            }
        },

        "OutboundPublicNetworkAclEntry": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "PublicNetworkAcl"
                },
                "RuleNumber": "100",
                "Protocol": "6",
                "RuleAction": "allow",
                "Egress": "true",
                "CidrBlock": "0.0.0.0/0",
                "PortRange": {
                    "From": "0",
                    "To": "65535"
                }
            }
        },

        "PublicSubnetNetworkAclAssociation1": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PublicSubnet1"
                },
                "NetworkAclId": {
                    "Ref": "PublicNetworkAcl"
                }
            }
        },

        "EC2SecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enable access to the EC2 host",
                "VpcId": {
                    "Ref": "VPC"
                },
                "SecurityGroupIngress": [{
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": "0.0.0.0/0"
                    }, 
		    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "443",
                        "ToPort": "443",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "3000",
                        "ToPort": "3000",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "0",
                        "ToPort": "65535",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "icmp",
                        "FromPort": "-1",
                        "ToPort": "-1",
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        },
        "SGBaseIngress": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "EC2SecurityGroup"
                },
                "IpProtocol": "tcp",
                "FromPort": "80",
                "ToPort": "80",
                "SourceSecurityGroupId": {
                    "Ref": "EC2SecurityGroup"
                }
            }
        },
        "PublicInstance1": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "InstanceType": "t2.small",
                "ImageId": "%ami-2%",
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": ["", [
                            "#!/bin/bash\n",
                            "/bin/echo 'cloud_user:%password%' | /usr/sbin/chpasswd\n",
			    "echo '[mariadb]\n' >> /etc/yum.repos.d/MariaDB.repo\n",
			    "echo 'name = MariaDB\n' >> /etc/yum.repos.d/MariaDB.repo\n",
                            "echo 'baseurl = http://yum.mariadb.org/10.4/centos7-amd64\n' >> /etc/yum.repos.d/MariaDB.repo\n",
                            "echo 'gpgkey=https://yum.mariadb.org/RPM-GPG-KEY-MariaDB\n' >> /etc/yum.repos.d/MariaDB.repo\n",
                            "echo 'gpgcheck=1' /etc/yum.repos.d/MariaDB.repo\n",
                            "yum -y install MariaDB-server MariaDB-client galera-4\n",
                            "sudo semanage port -m -t mysqld_port_t -p tcp 4567\n",
                            "sudo semanage port -a -t mysqld_port_t -p tcp 4568\n",
                            "sudo semanage port -m -t mysqld_port_t -p tcp 4444\n",
                            "sudo semanage permissive -a mysqld_t\n",
			    "setenforce 0\n",
			    "firewall-cmd --zone=public --add-port=4567/tcp \n",
                            "firewall-cmd --zone=public --add-port=4568/tcp \n",
                            "firewall-cmd --zone=public --add-port=4444/tcp \n",
                            "firewall-cmd --zone=public --add-port=3306/tcp \n",
                            "firewall-cmd --zone=public --add-port=13306/tcp \n",
			    "setenforce 1\n"
                        ]]
                    }
                },
                "NetworkInterfaces": [{
                    "GroupSet": [{
                        "Ref": "EC2SecurityGroup"
                    }],
                    "PrivateIpAddress": "10.0.1.100",
                    "AssociatePublicIpAddress": "true",
                    "DeviceIndex": "0",
                    "DeleteOnTermination": "true",
                    "SubnetId": {
                        "Ref": "PublicSubnet1"
                    }
                }]
            }
        }
	
    },
    "Outputs": {
        "pubIpAddress1": {
            "Description": "Public IP address of node0",
            "Value": { "Fn::GetAtt": ["PublicInstance1", "PublicIp"] }
            },
        "privIpAddress1" : {
            "Description" : "Private ip address of the node0",
            "Value" : { "Fn::GetAtt" : [ "PublicInstance1", "PrivateIp" ] }
	    }
    }
}
